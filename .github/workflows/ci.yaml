name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: microsoft

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Execute Gradle build
        run: ./gradlew test 
        env:
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Unit Test Results
        uses: phoenix-actions/test-reporting@v12
        if: always()
        with:
          name: Junit Tests 
          path: ${{ inputs.project-root }}/build/test-results/test/*.xml
          reporter: java-junit
          fail-on-error: true

      - name: JaCoCo Code Coverage Report
        if: inputs.jacoco-xml-file != ''
        id: coverage
        uses: PavanMudigonda/jacoco-reporter@v4.9
        with:
          coverage_results_path: ${{ inputs.jacoco-xml-file }}
          coverage_report_name: Coverage
          coverage_report_title: JaCoCo
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        if: github.event_name != 'pull_request' && inputs.jacoco-xml-file != '' 
        with:
          gistID: e2934587aa9a8cc9e0dbc9bcdd730b0d
          auth: ${{ secrets.CREATE_GIST_PAT }}
          filename: badge.json
          label: coverage
          message: ${{ steps.coverage.outputs.coveragePercentageString }}
          valColorRange: ${{ steps.coverage.outputs.coveragePercentage }}
          maxColorRange: 90
          minColorRange: 50

